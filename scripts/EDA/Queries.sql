	-- Retrieve a list of unique countries from which customers originate

	select distinct country
 from gold.dim_customers;
 ---
 -------Retrieve a list of unique categories, subcategories, and products

 select * from gold.dim_products;

  select distinct category, subcategory, product_name from gold.dim_products
  order by category, subcategory, product_name;

    select distinct category from gold.dim_products;
  select distinct  subcategory from gold.dim_products;
  select distinct product_name from gold.dim_products;
  ---
  -- Determine the first and last order date and the total duration in months

   select * from gold.fact_sales;

      select 
	  min(order_date) as first_order_date,
	  max(order_date) as last_order_date,
	  datediff(month,min(order_date),max(order_date))as order_range_months
	  from gold.fact_sales;

	  --------
	     select * from gold.dim_customers;

	----------- Find the youngest and oldest customer based on birthdate

	  select
	  min(birthdate) as oldest_customer,
	    datediff(year, min(birthdate),getdate()) as oldest_customer_age,
	  max(birthdate) as youngest_customer,
	  datediff(year,max(birthdate),getdate()) as youngest_customer_age
	  from gold.dim_customers;


	  ------- Find the Total Sales

SELECT SUM(sales_amount) AS total_sales FROM gold.fact_sales

---- Find how many items are sold
SELECT SUM(quantity) AS total_quantity FROM gold.fact_sales

---- Find the average selling price
SELECT AVG(price) AS avg_price FROM gold.fact_sales

---- Find the Total number of Orders

select count(order_number) from gold.fact_sales;
select count(distinct order_number) from gold.fact_sales;

---- Find the total number of products
SELECT COUNT(product_name) AS total_products FROM gold.dim_products

---- Find the total number of customers
SELECT COUNT(customer_key) AS total_customers FROM gold.dim_customers;

---- Find the total number of customers that has placed an order
SELECT COUNT(DISTINCT customer_key) AS total_customers FROM gold.fact_sales;

select* from gold.fact_sales;

---- Generate a Report that shows all key metrics of the business
SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity', SUM(quantity) FROM gold.fact_sales
UNION ALL
SELECT 'Average Price', AVG(price) FROM gold.fact_sales
UNION ALL
SELECT 'Total Orders', COUNT(DISTINCT order_number) FROM gold.fact_sales
UNION ALL
SELECT 'Total Products', COUNT(DISTINCT product_name) FROM gold.dim_products
UNION ALL
SELECT 'Total Customers', COUNT(customer_key) FROM gold.dim_customers;

select* from gold.dim_customers;

---- Find total customers by countries

select country,
count(customer_key) as total_customers
from gold.dim_customers
group by country
order by total_customers desc;

---- Find total customers by gender
SELECT
    gender,
    COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC;


---- Find total products by category
SELECT
    category,
    COUNT(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC;

---- What is the average costs in each category?
SELECT
    category,
    AVG(cost) AS avg_cost
FROM gold.dim_products
GROUP BY category
ORDER BY avg_cost DESC;

select * from gold.dim_products;

---- What is the total revenue generated for each category?

select p.category,
sum(f.sales_amount) as total_sales
from gold.fact_sales f
left join gold.dim_products p on 
f.product_key=p.product_key
group by p.category;


---- What is the total revenue generated by each customer?
SELECT 
    c.customer_key,
    c.first_name,
    c.last_name,
    SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
    ON c.customer_key = f.customer_key
GROUP BY 
    c.customer_key,
    c.first_name,
    c.last_name
ORDER BY total_revenue DESC;

---- What is the distribution of sold items across countries?
SELECT
    c.country,
    SUM(f.quantity) AS total_sold_items
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
    ON c.customer_key = f.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC;


---- Which 5 products Generating the Highest Revenue?
-- Simple Ranking
SELECT top 5 
    p.product_name,
    SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
    ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESc;

---- Which 5 products Generating the lowest Revenue?
-- Simple Ranking
SELECT top 5 
    p.product_name,
    SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
    ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue asc;

---- What is the total revenue generated by top 10 customer?
SELECT TOP 10
    c.customer_key,
    c.first_name,
    c.last_name,
    SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
    ON c.customer_key = f.customer_key
GROUP BY 
    c.customer_key,
    c.first_name,
    c.last_name
ORDER BY total_revenue DESC;
